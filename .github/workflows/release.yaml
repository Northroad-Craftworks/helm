name: Semantic Release

on:
  push:
    branches:
      - main
      - next

jobs:
  release:
    name: Semantic Release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0
      
      - name: Add Helm repository
        run: |
          helm repo add couchdb https://apache.github.io/couchdb-helm
          helm repo update

      - name: Semantic Release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v3.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 19.0.5
          extra_plugins: |
            conventional-changelog-eslint@3.0.9
            semantic-release-helm3@2.3.3

      - name: Run chart-releaser
        uses: jftanner/chart-releaser-action@remove-deprecated-option
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          config: cr.yaml
          charts_dir: .

      - name: Install doctl
        if: github.ref_name == 'main' && steps.semantic-release.outputs.new_release_published == 'true'
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Deploy to Production
        if: github.ref_name == 'main' && steps.semantic-release.outputs.new_release_published == 'true'
        env:
          VALUES: ${{ secrets.MICROSERVICES_VALUES }}
        run: |
          echo "Attempting to deploy v${{ steps.semantic-release.output.new_release_version }}"
          echo "$VALUES" > values.secret.yaml
          doctl kubernetes cluster kubeconfig save --expiry-seconds 600 northroad-craftworks-microservices
          helm upgrade --install -n production --create-namespace -f values.secret.yaml microservices microservices